package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"chatspace-server/graph/generated"
	"chatspace-server/graph/model"
	"context"
)

// SendMessage is the resolver for the sendMessage field.
func (r *mutationResolver) SendMessage(ctx context.Context, spaceID string, content string) (*model.Message, error) {
	return r.ucMessage.SendMessage(ctx, spaceID, content)
}

// Messages is the resolver for the messages field.
func (r *queryResolver) Messages(ctx context.Context, spaceID string) ([]*model.Message, error) {
	return r.ucMessage.Messages(ctx, spaceID)
}

// MessageSent is the resolver for the messageSent field.
func (r *subscriptionResolver) MessageSent(ctx context.Context, spaceID string) (<-chan *model.Message, error) {
	return r.ucMessage.MessageSent(ctx, spaceID)
}

// Subscription returns generated.SubscriptionResolver implementation.
func (r *Resolver) Subscription() generated.SubscriptionResolver { return &subscriptionResolver{r} }

type subscriptionResolver struct{ *Resolver }
